{"version":3,"sources":["utils/utils.js","components/List/index.js","assets/LogoFull.png","components/Logo.js","views/TaggerList.js","views/BaseWrapper.js","views/StoryList.js","components/Tagger/index.js","components/Story/Replacer.js","services/globalState.js","utils/story.js","components/Story/index.js","components/Configure/index.js","components/Home/index.js","components/Menu/index.js","services/auth.js","App.js","reportWebVitals.js","index.js","services/server.js","config/constants.js"],"names":["videoExts","getExt","fname","ext","trim","toLowerCase","split","length","isVideo","str","includes","MOBILE_MAX_WIDTH","require","Search","Input","Title","Typography","width","window","innerWidth","List","props","cardBodyStyle","padding","useState","filter","setFilter","className","bordered","bodyStyle","level","type","title","placeholder","onChange","val","target","value","style","display","position","columns","pagination","loading","dataSource","data","e","JSON","stringify","Logo","size","alt","src","LogoFull","dataIndex","render","path","to","textTransform","CheckCircleOutlined","sorter","compare","a","b","categorized","multiple","color","ClockCircleOutlined","uncategorized","TaggerList","setLoading","setData","useEffect","sendMsg","dataRequest","d","i","key","paddingTop","BaseWrapper","topPadding","logoSize","children","baseRoute","row","href","location","pathname","subPath","decodeURI","replace","btoa","StarOutlined","content","StoryList","useLocation","subPathShort","unshift","SERVER_ASSET_PATH","Text","Tagger","catName","useParams","tagCat","imageId","uuidv4","catList","useRef","index","setIndex","current","map","image","getImagePath","img","getServerAddress","increaseIndex","Math","min","decreaseIndex","max","direction","disabled","onClick","shape","icon","LeftOutlined","DoubleLeftOutlined","controls","autoPlay","muted","loop","RightOutlined","DoubleRightOutlined","id","onPressEnter","ev","tags","newFileName","msg","fileName","prefix","TagOutlined","suffix","Replacer","replacedTable","show","setShow","characters","o","name","replacement","ind","editable","onReplaceNameEnter","fontWeight","firstName","gender","occurences","rep","push","danger","replaced","onReplace","onSave","events","addGlobalEventListener","eventType","callback","emitGlobalEvent","state","subscriber","highLighWords","getHighlightWordClass","word","result","charCodeAt","toString","getHighLightStyle","hw","applyHighlightTags","html","RegExp","getStoryTitleScore","storyURL","url","score","performReplacementInter","paragraph","replacements","newPara","performReplacement","paragraphs","res","Story","atob","theme","setTheme","highlight","setHighlight","showImages","setShowImages","setParagraphs","photos","setPhotos","setTitle","setCharacters","origParagraphs","getParagraphsHTML","t","hl","checkedChildren","EyeOutlined","unCheckedChildren","EyeInvisibleOutlined","defaultChecked","message","info","ReloadOutlined","dangerouslySetInnerHTML","__html","para","photoSrc","paraIndex","filtered","photo","actress","getParagraphImageURL","preload","replaceTable","Configure","inputRef","SettingOutlined","textAlign","defaultValue","getServerHost","ref","addonAfter","setServerHost","connectToServer","Host","onPassEnter","pass","onAuthorize","minHeight","authorized","inputMode","LockOutlined","UnorderedListOutlined","Menu","isOpened","setOpened","inputEl","top","scrollHeight","console","log","UpOutlined","HomeOutlined","c","HighlightOutlined","CloseOutlined","LS_AUTH_ID","App","auth","localStorage","getItem","Date","parse","time","getTime","isAuthorized","setAuthorized","Home","setItem","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","socket","uuid","DEFAULT_SERVER_HOST","address","pendingRequests","readyState","CONNECTING","setTimeout","OPEN","msgId","v4","send","socketAddress","WebSocket","addEventListener","splice","handleMsg","success","warn","module","exports"],"mappings":"gGACA,0FAAMA,EAAY,CAChB,MACA,OAGIC,EAAS,SAACC,GACd,IAAIC,EAAMD,EAAME,OAAOC,cAAcC,MAAM,KAG3C,OAFAH,EAAMA,EAAIA,EAAII,OAAS,IAKnBC,EAAU,SAACC,GACf,IAAMN,EAAMF,EAAOQ,GAEnB,QAAIT,EAAUU,SAASP,K,gUCbjBQ,EAAqBC,EAAQ,IAA7BD,iBAEAE,EAAWC,IAAXD,OACAE,EAASC,IAATD,MAEYE,EAAUC,OAAtBC,WAqCOC,EAnCF,SAACC,GACZ,IAAMC,EAAgBL,EAAQN,EAAmB,CAAEY,QAAS,GAAM,GAD5C,EAEMC,mBAAS,IAFf,mBAEfC,EAFe,KAEPC,EAFO,KAoBtB,OACE,qBAAKC,UAAU,gBAAf,SACE,eAAC,IAAD,CAAMA,UAAU,cAAcC,WAAUX,EAAQN,GAAiCkB,UAAWP,EAA5F,UACE,cAACP,EAAD,CAAOY,UAAWV,EAAQN,EAAmB,YAAc,GAAImB,MAAO,EAAGC,KAAK,YAA9E,SAA2FV,EAAMW,QACjG,qBAAKL,UAAWV,EAAQN,EAAmB,sBAAwB,YAAnE,SACE,cAACE,EAAD,CAAQc,UAAWV,EAAQN,EAAmB,cAAgB,GAAIsB,YAAY,uBAAuBC,SArB5F,SAAAC,GAAG,OAAIT,EAAUS,EAAIC,OAAOC,MAAMjC,SAqB8EkC,MAAO,CAAErB,MAAO,YAE3I,qBAAKqB,MAAO,CAAEC,QAAS,QAASC,SAAU,UAA1C,SACE,cAAC,IAAD,CAAOZ,UAAU,EAAMa,QAASpB,EAAMoB,QAASC,YAAY,EAAOC,QAAStB,EAAMsB,QAASC,WArB3FnB,GAAWA,EAAOlB,SAAUc,EAAMsB,QAG3BtB,EAAMwB,KAAKpB,QAAO,SAAAqB,GAC5B,QAAIC,KAAKC,UAAUF,GAAGzC,cAAcK,SAASe,EAAOpB,kBAH7CgB,EAAMwB,eClBJ,MAA0B,qCCU1BI,EARF,SAAC5B,GACZ,OACE,qBAAKM,UAAU,gBAAf,SACE,qBAAKA,UAA0B,OAAfN,EAAM6B,KAAgB,UAAY,OAASC,IAAI,QAAQC,IAAKC,O,QCI1E1C,EAAqBC,EAAQ,IAA7BD,iBAEYM,EAAUC,OAAtBC,WAGFsB,EAAU,CACd,CACET,MAAO,OACPsB,UAAW,OACXC,OAAQ,SAAAC,GACN,OACE,cAAC,IAAD,CAAMC,GAAE,kBAAaD,GAAQlB,MAAO,CAACoB,cAAe,cAApD,SACEF,MAKR,CACExB,MAAQ,cAAC2B,EAAA,EAAD,IACRL,UAAW,cACXM,OAAQ,CACNC,QAAS,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,YAAcD,EAAEC,aACrCC,SAAU,GAEZV,OAAQ,SAAAS,GACN,OACE,cAAC,IAAD,CAAKE,MAAM,QAAX,SACGF,GADqBA,KAM9B,CACEhC,MAAQ,cAACmC,EAAA,EAAD,IACRb,UAAW,gBACXM,OAAQ,CACNC,QAAS,SAACC,EAAGC,GAAJ,OAAUD,EAAEM,cAAgBL,EAAEK,eACvCH,SAAU,GAEZV,OAAQ,SAAAa,GACN,OACE,cAAC,IAAD,CAAKF,MAAM,OAAX,SACGE,GADoBA,MA+BhBC,EAtBI,SAAChD,GAAW,IAAD,EACEG,oBAAS,GADX,mBACrBmB,EADqB,KACZ2B,EADY,OAEJ9C,mBAAS,IAFL,mBAErBqB,EAFqB,KAEf0B,EAFe,KAc5B,OAVAC,qBAAU,WACRC,kBAAQ,CAAEC,YAAa,eAAgB,SAACC,GACtC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAEpE,OAAQqE,IAC5BD,EAAEC,GAAGC,IAAMF,EAAEC,GAAGpB,KAElBe,EAAQI,GACRL,GAAW,QAEZ,IAGD,sBAAK3C,UAAU,WAAWW,MAAO,CAAEwC,WAAY7D,EAAQN,EAAmB,OAAS,QAAnF,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMgC,QAASA,EAASF,QAASA,EAASI,KAAMA,EAAMb,MAAM,eC1E1DrB,EAAqBC,EAAQ,IAA7BD,iBAEYM,EAAUC,OAAtBC,WAaO4D,EAXK,SAAC1D,GACnB,IAAM2D,EAA8B,EAAjB3D,EAAM4D,UAAgB,EAEzC,OACE,sBAAKtD,UAAU,WAAWW,MAAO,CAAEwC,WAAY,UAAA7D,EAAQN,EAAsBqE,EAAoBA,EAAa,IAA/D,OAA/C,UACE,cAAC,EAAD,CAAM9B,KAAM8B,EAAa,EAAI,KAAO,OACnC3D,EAAM6D,a,SCHLvE,EAAqBC,EAAQ,IAA7BD,iBAEYM,EAAUC,OAAtBC,WAEFgE,EAAY,cAGZ1C,EAAU,CACd,CACET,MAAO,OACPsB,UAAW,OACXC,OAAQ,SAACC,EAAM4B,GACb,IAAIC,EAAI,UAAMnE,OAAOoE,SAASC,UAAtB,OAAiC/B,EAAjC,KAER,GAAiB,UAAb4B,EAAIrD,KAAkB,CACxB,IAAMyD,EAAUC,UAAUvE,OAAOoE,SAASC,UAAUG,QAAQP,EAAW,IACvEE,EAAI,UAAMG,GAAN,OAAgBhC,GAEpB6B,EAAOM,KAAKN,GACZA,EAAI,UAdO,SAcP,YAAoBA,GAG1B,OACE,cAAC,IAAD,CAAM5B,GAAI4B,EAAM/C,MAAO,CAACoB,cAAe,cAAvC,SACEF,MAKR,CACExB,MAAQ,cAAC4D,EAAA,EAAD,IACRtC,UAAW,UACXM,OAAQ,CACNC,QAAS,SAACC,EAAGC,GAAJ,OAAWD,EAAE+B,QAAU9B,EAAE8B,SAClC5B,SAAU,GAEZV,OAAQ,SAACsC,EAAST,GAChB,OAAgB,OAAZS,EACM,GAGR,cAAC,IAAD,CAAK3B,MAAoB,UAAbkB,EAAIrD,KAAmB,OAAS,QAA5C,SACG8D,GADuDA,MA4CnDC,EAnCG,SAACzE,GACjB,IAAMiE,EAAWS,cADU,EAGGvE,oBAAS,GAHZ,mBAGpBmB,EAHoB,KAGX2B,EAHW,OAIH9C,mBAAS,IAJN,mBAIpBqB,EAJoB,KAId0B,EAJc,KA2B3B,OArBAC,qBAAU,WACRF,GAAW,GACX,IAAMkB,EAAUF,EAASC,SAASG,QAAQP,EAAW,IAErDV,kBAAQ,CAAEC,YAAa,UAAW,QAAWc,IAAW,SAACb,GACvD,IAAMqB,EAAe9E,OAAOoE,SAASC,SAASG,QAAQP,EAAW,IAC7Da,GAAiC,MAAjBA,GAClBrB,EAAEsB,QAAQ,CACRzC,KAAM,KACNqC,QAAS,KACT9D,KAAM,OAGV,IAAK,IAAI6C,EAAI,EAAGA,EAAID,EAAEpE,OAAQqE,IAC5BD,EAAEC,GAAGC,IAAMF,EAAEC,GAAGpB,KAElBe,EAAQI,GACRL,GAAW,QAEZ,CAACgB,IAGF,sBAAK3D,UAAU,WAAWW,MAAO,CAAEwC,WAAY7D,EAAQN,EAAmB,OAAS,QAAnF,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMgC,QAASA,EAASF,QAASA,EAASI,KAAMA,EAAMb,MAAM,mB,8EC1E1DkE,G,OAAsBtF,EAAQ,IAA9BsF,mBACAC,EAASnF,IAATmF,K,EACoBvF,EAAQ,KAA5BX,E,EAAAA,OAAQO,E,EAAAA,QAiHD4F,GA/GA,SAAC/E,GACd,IAAMgF,EAAUC,cAAYC,OACtBC,EAAUC,cAASnG,MAAM,KAAK,GAC9BoG,EAAUC,iBAAO,IAHC,EAKMnF,oBAAS,GALf,mBAKjBmB,EALiB,KAKR2B,EALQ,OAME9C,mBAAS,GANX,mBAMjBoF,EANiB,KAMVC,EANU,KAQxBrC,qBAAU,WACRC,kBAAQ,CAAEC,YAAa,kBAAmBlB,KAAM6C,IAAW,SAAC1B,GAC1D+B,EAAQI,QAAUnC,EAClB+B,EAAQI,QAAUJ,EAAQI,QAAQC,KAAI,SAAAC,GAAW,MAAO,CAAEA,QAAOhD,aAAa,EAAOxD,QAASA,EAAQwG,OACtG1C,GAAW,QAEZ,IAEH,IAAM2C,EAAe,WACnB,GAAIL,GAASF,EAAQI,QAAQvG,OAC3B,MAAO,OAET,IAAI2G,EAAG,UAAMC,8BAAN,OAA2BjB,EAA3B,YAAgDG,EAAhD,KAGP,OAFAa,GAAOR,EAAQI,QAAQF,GAAO5C,YAAc,cAAgB,gBAC5DkD,GAAG,WAAQR,EAAQI,QAAQF,GAAOI,QAI9BI,EAAgB,SAACxC,GACrBiC,EAASQ,KAAKC,IAAIV,EAAQhC,EAAG8B,EAAQI,QAAQvG,OAAS,KAGlDgH,EAAgB,SAAC3C,GACrBiC,EAASQ,KAAKG,IAAIZ,EAAQhC,EAAG,KA4B/B,OACE,8BACE,sBAAKjD,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,oBACMiF,EAAQ,EADd,YACmBF,EAAQI,QAAQvG,QACjC,uBACA,cAAC4F,EAAD,CAAMpE,KAAM2E,EAAQI,QAAQF,IAAUF,EAAQI,QAAQF,GAAO5C,YAAc,UAAY,UAAvF,SACG0C,EAAQI,QAAQF,GAASF,EAAQI,QAAQF,GAAOI,MAAQ,SAG7D,sBAAKrF,UAAU,sBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,CAAO8F,UAAU,WAAjB,UACE,cAAC,IAAD,CAAQC,SAAoB,IAAVd,EAAae,QAAS,kBAAMJ,EAAc,IAAIxF,KAAK,UAAU6F,MAAM,SAASC,KAAM,cAACC,EAAA,EAAD,MACpG,cAAC,IAAD,CAAQJ,SAAoB,IAAVd,EAAae,QAAS,kBAAMJ,EAAc,IAAIxF,KAAK,UAAU6F,MAAM,SAASC,KAAM,cAACE,EAAA,EAAD,WAGxG,sBAAKpG,UAAU,uBAAf,UACGgB,GAAW,cAAC,IAAD,CAAMO,KAAK,WACrBP,GAAW+D,EAAQI,QAAQF,KAAWF,EAAQI,QAAQF,GAAOpG,SAC7D,qBAAKmB,UAAU,cAAcwB,IAAI,MAAMC,IAAK6D,OAE3CtE,GAAW+D,EAAQI,QAAQF,IAAUF,EAAQI,QAAQF,GAAOpG,SAC7D,uBAAOmB,UAAU,cAAcyB,IAAK6D,IAAgBe,UAAQ,EAACC,UAAQ,EAACC,OAAK,EAACC,MAAI,OAIpF,qBAAKxG,UAAU,iBAAf,SACE,eAAC,IAAD,CAAO8F,UAAU,WAAjB,UACE,cAAC,IAAD,CAAQC,SAAUd,IAAUF,EAAQI,QAAQvG,OAAS,EAAGoH,QAAS,kBAAMP,EAAc,IAAIrF,KAAK,UAAU6F,MAAM,SAASC,KAAM,cAACO,EAAA,EAAD,MAC7H,cAAC,IAAD,CAAQV,SAAUd,IAAUF,EAAQI,QAAQvG,OAAS,EAAGoH,QAAS,kBAAMP,EAAc,KAAKrF,KAAK,UAAU6F,MAAM,SAASC,KAAM,cAACQ,EAAA,EAAD,cAIpI,sBAAK1G,UAAU,sBAAf,UACE,cAAC,IAAD,CAAKuC,MAAM,UAAX,eACA,cAAC,IAAD,CAAKA,MAAM,UAAX,eACA,cAAC,IAAD,CAAKA,MAAM,UAAX,eACA,cAAC,IAAD,CAAKA,MAAM,UAAX,eACA,cAAC,IAAD,CAAKA,MAAM,UAAX,eACA,cAAC,IAAD,CAAKA,MAAM,UAAX,gBACA,cAAC,IAAD,CAAKA,MAAM,UAAX,gBACA,cAAC,IAAD,CAAKA,MAAM,UAAX,mBAEF,qBAAKvC,UAAU,uBAAf,SACE,cAAC,IAAD,CAAO2G,GAAG,OAAOC,aAtEJ,SAACC,GACpB,IAAMrI,EAAMF,EAAOyG,EAAQI,QAAQF,GAAOI,OACpCyB,EAAOD,EAAGpG,OAAOC,MAAMjC,OAAOC,eAAiB,IAE/CqI,EAAW,UAAMD,EAAN,YAAcjC,EAAd,YAAyBrG,GACpCwI,EAAM,CACVjE,YAAa,iBACblB,KAAM6C,EACNuC,SAAUlC,EAAQI,QAAQF,GAAOI,MACjChD,YAAa0C,EAAQI,QAAQF,GAAO5C,YACpC0E,YAAaA,GAEfjE,kBAAQkE,GAAK,WACXjC,EAAQI,QAAQF,GAAOI,MAAQ0B,EAC/BhC,EAAQI,QAAQF,GAAO5C,aAAc,EACjC4C,IAAUF,EAAQI,QAAQvG,OAAS,EACrCgH,EAAc,GAEdH,EAAc,GAEhBoB,EAAGpG,OAAOC,MAAQ,MAEpBmG,EAAGpG,OAAOC,MAAQ,IAgDiCwG,OAAS,cAACC,EAAA,EAAD,IAAkBC,OAAQvC,Y,2DCxHlFL,GAASnF,IAATmF,KA+FO6C,GA5FE,SAAC3H,GAChB,IAAM4H,EAAgBtC,iBAAO,IADH,EAEFnF,oBAAS,GAFP,mBAEnB0H,EAFmB,KAEbC,EAFa,OAGF3H,mBAAS,IAHP,mBAGnBqB,EAHmB,KAGb0B,EAHa,KAK1BC,qBAAU,WACRyE,EAAcnC,QAAUzF,EAAM+H,WAAWrC,KAAI,SAACsC,GAAQ,MAAO,CAAEC,KAAMD,EAAEC,KAAMC,YAAa,OAC1FhF,EAAQlD,EAAM+H,WAAWrC,KAAI,SAACsC,EAAGG,GAAuB,OAAbH,EAAExE,IAAM2E,EAAYH,QAC9D,CAAChI,EAAM+H,aAEV,IAQM3G,EAAU,CACd,CACET,MAAO,OACPsB,UAAW,OACXuB,IAAK,OACLtB,OAAQ,SAAC+F,EAAMlE,GACb,OAAIA,EAAIqE,SAEJ,8BACE,cAAC,IAAD,CAAOvH,SAAU,SAACY,IAbH,SAACwG,EAAM1C,GAChCqC,EAAcnC,QAAQF,GAAO0C,KAAOA,EAYAI,CAAmB5G,EAAEV,OAAOC,MAAO+C,EAAIP,MAAQ5C,YAAY,4BAKzF,gCACE,eAAC,GAAD,CAAMN,UAAU,aAAaW,MAAO,CAAEqH,WAAY,QAAlD,UAA6DL,EAA7D,OACC,cAAC,IAAD,CAAKpF,MAAOkB,EAAIwE,UAAY,UAAY,WAAxC,SAAqDxE,EAAIwE,UAAY,YAAc,aACnFxE,EAAIyE,QAAU,cAAC,IAAD,CAAKlI,UAAU,YAAYuC,MAAqB,QAAdkB,EAAIyE,OAAmB,OAAS,OAAlE,SAA2EzE,EAAIyE,SAC7FzE,EAAI0E,YAAc,cAAC,IAAD,CAAK5F,MAAM,SAAX,SAAqBkB,EAAI0E,kBAKpD,CACE9H,MAAO,UACPsB,UAAW,aACXuB,IAAK,aACLtB,OAAQ,SAAC+F,EAAMlE,GACb,OACE,8BACE,cAAC,IAAD,CAAOlD,SAAU,SAACY,GAtCL,IAACiH,EAAKnD,EAALmD,EAsC2BjH,EAAEV,OAAOC,MAtC/BuE,EAsCsCxB,EAAIP,IArCrEoE,EAAcnC,QAAQF,GAAO2C,YAAcQ,GAqCkC9H,YAAY,0BAwB3F,OACE,sBAAKN,UAAU,+BAAf,UACE,cAAC,GAAD,wBAAsB,cAAC,KAAD,CAAQO,SAAUiH,IACxC,uBACA,uBACED,GACA,gCACE,cAAC,IAAD,CAAOtH,UAAU,EAAMc,YAAY,EAAOE,WAAYC,EAAMJ,QAASA,IACrE,uBACA,eAAC,IAAD,CAAOgF,UAAU,WAAjB,UACE,cAAC,IAAD,CAAQG,MAAM,SAAS7F,KAAK,SAAS4F,QA3B3B,WAClBsB,EAAcnC,QAAQkD,KAAK,CAAEV,KAAM,GAAIC,YAAa,KACpDhF,EAAQ,GAAD,oBAAK1B,GAAL,CAAW,CAAEyG,KAAM,GAAIG,UAAU,EAAM5E,IAAKhC,EAAKtC,YAyBhD,eACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQqH,MAAM,QAAQ7F,KAAK,UAAUkI,QAAM,EAACtC,QAxBtC,WAChB,IADsB,EAChBuC,EAAW,GADK,eAGNjB,EAAcnC,SAHR,IAGtB,2BAAuC,CAAC,IAA/BiD,EAA8B,QACjCA,EAAIR,aAAeQ,EAAIR,YAAYhJ,SACrC2J,EAASH,EAAIT,MAAQS,EAAIR,cALP,8BAStBlI,EAAM8I,UAAUD,IAeN,qBACA,cAAC,IAAD,CAAQtC,MAAM,QAAQ7F,KAAK,UAAU4F,QAAStG,EAAM+I,OAApD,+BC3FRC,I,OAAS,IAETC,GAAyB,SAACC,EAAWC,GACrCH,GAAOE,IACTF,GAAOE,GAAWP,KAAKQ,GAEzBH,GAAOE,GAAa,CAACC,IAGjBC,GAAkB,SAACF,EAAWG,GAClC,GAAKL,GAAOE,GAAZ,CAD4C,qBAIrBF,GAAOE,IAJc,IAI5C,2BAA0C,EACxCI,EADwC,SAC7BD,IAL+B,iCCTtCvD,GAAqBvG,EAAQ,IAA7BuG,iBAEAjB,GAAsBtF,EAAQ,IAA9BsF,kBAEF0E,GAAgB,CACpB,KAAQ,UACR,MAAS,UACT,KAAQ,UACR,OAAU,UACV,QAAW,UACX,SAAY,UACZ,KAAQ,UACR,KAAQ,UACR,IAAO,UACP,KAAQ,UACR,SAAY,UACZ,2BAAQ,UACR,2BAAQ,UACR,MAAS,UACT,MAAS,UACT,MAAS,WAGLC,GAAwB,SAACC,GAE7B,IADA,IAAIC,EAAS,IACJnG,EAAI,EAAGA,EAAIkG,EAAKvK,OAAQqE,IAC/BmG,GAAUD,EAAKE,WAAWpG,GAAGqG,SAAS,IAGxC,OADAF,GAAU,KAING,GAAoB,WACxB,IAAI5I,EAAQ,UACZ,IAAK,IAAI6I,KAAMP,GACbtI,GAAK,WAAQuI,GAAsBM,GAA9B,kBAA2CP,GAAcO,GAAzD,KAGP,OADA7I,GAAS,YAIL8I,GAAqB,SAACC,GAC1B,IAAK,IAAIF,KAAMP,GACbS,EAAOA,EAAK3F,QAAQ,IAAI4F,OAAJ,aAAiBH,EAAjB,OAA0B,MAAvC,uBAA8DN,GAAsBM,GAApF,cAA6FA,EAA7F,aAGT,OAAOE,GAgBHE,GAAqB,SAACC,GAC1B,IAAIC,EAAMD,EAASlL,MAAM,KAIzB,MAAO,CAAE0B,OADTyJ,GADAA,GADAA,EAAMA,EAAIA,EAAIlL,OAAS,GAAGD,MAAM,MACtBmL,EAAIlL,OAAS,IACbD,MAAM,MACI,GAAIoL,MAAOD,EAAIA,EAAIlL,OAAS,KAc5CoL,GAA0B,SAACC,EAAWC,GAC1C,IAAIC,EAAUF,EAEd,IAAK,IAAIrC,KAAesC,EACtBC,EAAUA,EAAQpG,QAAQ,IAAI4F,OAAO/B,EAAa,MAAOsC,EAAatC,IAGxE,OAAOuC,GAGHC,GAAqB,SAACC,EAAYH,GACtC,GAA0B,iBAAfG,EACT,OAAOL,GAAwBK,EAAYH,GAG7C,IALuD,EAKjDI,EAAM,GAL2C,eAOjCD,GAPiC,IAOvD,2BAAkC,CAAC,IAA1BJ,EAAyB,QAChCK,EAAIjC,KAAK2B,GAAwBC,EAAWC,KARS,8BAWvD,OAAOI,GC/EDzL,GAAYI,EAAQ,KAApBJ,QAyFO0L,GAvFD,SAAC7K,GACb,IAAMmK,EAAWW,KAAK7F,cAAYkF,UADX,EAGOhK,oBAAS,GAHhB,mBAGhBmB,EAHgB,KAGP2B,EAHO,OAIG9C,oBAAS,GAJZ,mBAIhB4K,EAJgB,KAITC,EAJS,OAKW7K,oBAAS,GALpB,mBAKhB8K,EALgB,KAKLC,EALK,OAMa/K,oBAAS,GANtB,mBAMhBgL,EANgB,KAMJC,EANI,OAQajL,mBAAS,IARtB,mBAQhBwK,EARgB,KAQJU,EARI,OASKlL,mBAAS,IATd,mBAShBmL,EATgB,KASRC,EATQ,OAUGpL,mBAAS,IAVZ,mBAUhBQ,EAVgB,KAUT6K,EAVS,OAYarL,mBAAS,IAZtB,mBAYhB4H,EAZgB,KAYJ0D,EAZI,KAajBC,EAAiBpG,iBAAO,IAE9BnC,qBAAU,WACRC,kBAAQ,CAAEC,YAAa,WAAY8G,aAAY,SAAC7G,GAC9CoI,EAAejG,QDOK,SAACkF,GACzB,IADwC,EAClCC,EAAM,GAD4B,eAGlBD,GAHkB,IAGxC,2BAAkC,CAAC,IAA1BJ,EAAyB,QAEhCA,EAAYA,EAAUlG,QAAQ,IAAI4F,OAAO,KAAM,KAAM,UACrDM,EAAYR,GAAmBQ,GAC/BK,EAAIjC,KAAK4B,IAP6B,8BAUxC,OAAOK,ECjBsBe,CAAkBrI,EAAEqH,YAE7Cc,EAAcnI,EAAEyE,YAChByD,EAAStB,GAAmBC,GAAUxJ,OACtC0K,EAAcK,EAAejG,SAC7B8F,EAAUjI,EAAEgI,QACZrI,GAAW,MAGbgG,GAAuB,SAAS,SAAC2C,GAAQZ,EAASY,MAClD3C,GAAuB,aAAa,SAAC4C,GAASX,EAAaW,QAC1D,IAqBH,OACE,sBAAKvL,UAAW,kBAAoByK,EAAQ,qBAAuB,qBAAnE,UAEE,cAAC,EAAD,IACA,sBAAKzK,UAAW,qBAAuByK,EAAQ,wBAA0B,wBAAzE,UACGzJ,GAAW,qBAAKhB,UAAU,mBAAf,SACV,cAAC,IAAD,CAAMuB,KAAK,YAEb,sBAAKvB,UAAWgB,EAAU,cAAgB,GAA1C,UACE,sBAAKhB,UAAU,aAAf,cAA8BK,EAA9B,OACA,eAAC,IAAD,CAAOyF,UAAU,WAAjB,UACE,cAAC,IAAD,CAAKvD,MAAM,OAAX,SAAmBqH,GAAmBC,GAAUE,QAChD,eAAC,IAAD,WACE,cAAC,KAAD,CAAQxJ,SAAUuK,EAAeU,gBAAiB,cAACC,GAAA,EAAD,IAAiBC,kBAAmB,cAACC,GAAA,EAAD,IAA0BC,gBAAgB,IAChI,cAAC,IAAD,CAAQxL,KAAK,OAAO4F,QA3BX,WACnBlD,kBAAQ,CAAEC,YAAa,gBAAiBsH,eAAc,SAACrH,GACrDiI,EAAUjI,EAAEgI,QACZa,IAAQC,KAAK,yBAwBsC7F,MAAM,SAASC,KAAM,cAAC6F,GAAA,EAAD,YAGpE,sBAAK/L,UAAU,iBAAf,UACE,qBAAKgM,wBAAyB,CAAEC,OAAQtB,EAAYpB,KAAsB,MACzEc,EAAWjF,KAAI,SAAC8G,EAAMjH,GACrB,IAAMkH,EDxBS,SAACC,EAAWpB,GAEvC,IAAMqB,EAAWrB,EAAOlL,QAAO,SAACwM,GAAD,OAAYA,EAAMrC,YAAcmC,KAE/D,OAAKC,EAASzN,OAIR,GAAN,OAAU4G,MAAV,OAA+BjB,GAA/B,YAAoD8H,EAAS,GAAGE,QAAhE,wBAAuFF,EAAS,GAAGC,OAH1F,KCmBoBE,CAAqBvH,EAAO+F,GAC7C,OACE,sBAAKhL,UAAU,qBAAf,UACE,qBAAKA,UAAU,YAAYgM,wBAAyB,CAAEC,OAAQC,KAC7DrB,GAAcsB,IAAatN,GAAQsN,IAAa,qBAAKnL,QAAQ,OAAOhB,UAAU,aAAawB,IAAI,cAAcC,IAAK0K,IAClHtB,GAAcsB,GAAYtN,GAAQsN,IAAa,uBAAOM,QAAQ,WAAWzM,UAAU,aAAawB,IAAI,cAAcC,IAAK0K,EAAU5F,OAAK,EAACF,UAAQ,EAACC,UAAQ,EAACE,MAAI,MAHvHvB,SAO/C,qBAAKjF,UAAU,uBAAf,SACE,cAAC,GAAD,CAAUwI,UAjDJ,SAACkE,GACf3B,EAAcX,GAAmBgB,EAAejG,QAASuH,IACzDxB,EAASd,GAAmB/J,EAAOqM,IACnCb,IAAQC,KAAK,cA8CyBrD,OApCtB,WAChB3F,kBAAQ,CAAEC,YAAa,YAAasH,aAAYhK,UAAS,SAAC2C,GACxD6I,IAAQC,KAAK,oBAkC0CrE,WAAYA,gB,UCjGjEjD,I,OAASnF,IAATmF,MA+BOmI,GA5BG,SAACjN,GACjB,IAAMkN,EAAW5H,mBAQjB,OACE,qBAAKhF,UAAU,gBAAf,SACE,cAAC,IAAD,CAAMK,MAAQ,qCAAE,cAACwM,GAAA,EAAD,IAAoB,gBAApC,SACE,sBAAKlM,MAAO,CAAEmM,UAAW,QAAzB,UACE,cAAC,GAAD,CAAM1M,KAAK,YAAX,yBACA,uBACA,cAAC,IAAD,CAAO2M,aAAcC,0BAAiBC,IAAKL,EAAUM,WAAY,cAACL,GAAA,EAAD,IAAqBvM,YAAY,yBAClG,uBACA,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ0F,QAhBC,WACjBmH,wBAAcP,EAASzH,QAAQ4D,MAAMrI,OACrC0M,6BAcqChN,KAAK,UAAlC,kBACA,cAAC,IAAD,CAAQ4F,QAASoH,kBAAjB,kC,oBCxBJ5I,GAASnF,IAATmF,KAqCO6I,GAnCF,SAAC3N,GAEZ,IAAMkN,EAAW5H,mBAEXsI,EAAc,WAClB,IAAMC,EAAOX,EAASzH,QAAQ4D,MAAMrI,MACpChB,EAAM8N,YAAYD,IAGpB,OACE,qBAAKvN,UAAU,gBAAf,SACE,eAAC,IAAD,CAAMW,MAAO,CAAE8M,UAAW,SAAWpN,MAAQ,mCAAG,qBAAhD,WACIX,EAAMgO,YAAc,gCACpB,cAAC,GAAD,CAAMtN,KAAK,YAAX,yBACA,cAAC,IAAD,CAAOuN,UAAU,UAAU/G,aAAc0G,EAAaL,IAAKL,EAAUxM,KAAK,WAAW8M,WAAY,cAACU,GAAA,EAAD,IAAkBtN,YAAY,qBAC/H,uBACA,uBACA,cAAC,IAAD,CAAQ0F,QAASsH,EAAalN,KAAK,UAAUkI,QAAM,EAAnD,0BAED5I,EAAMgO,YAAc,gCACnB,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAM5L,GAAG,eAAT,SACE,cAAC,IAAD,CAAQP,KAAK,QAAQnB,KAAK,UAAU6F,MAAM,SAASC,KAAM,cAAC2H,GAAA,EAAD,QAE3D,cAAC,IAAD,CAAM/L,GAAG,cAAT,SACE,cAAC,IAAD,CAAQP,KAAK,QAAQnB,KAAK,UAAUkI,QAAM,EAACrC,MAAM,SAASC,KAAM,cAAC2G,GAAA,EAAD,oB,uCCiB/DiB,I,OAnCF,SAACpO,GAAW,IAAD,EACQG,oBAAS,GADjB,mBACfkO,EADe,KACLC,EADK,KAEhBC,EAAUjJ,iBAAO,MAOvB,OACE,sBAAKiI,IAAKgB,EAAStH,GAAG,gBAAgB3G,UAAU,gBAAgBW,MAAOoN,EAAW,CAAEG,IAAI,gBAAD,OAAkBD,EAAQ9I,QAAQgJ,aAAlC,QAAwD,CAAED,IAAK,SAAtJ,UACE,qBAAKlO,UAAU,wBAAf,SACE,wBAAQgG,QARS,WACrBgI,GAAWD,GACXK,QAAQC,IAAIJ,EAAQ9I,QAAQgJ,eAMSnO,UAAU,eAA3C,SAA0D,cAACsO,GAAA,EAAD,QAE5D,sBAAKtO,UAAU,qBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,eAAC,IAAD,CAAM8B,GAAG,QAAT,UAAiB,cAACyM,GAAA,EAAD,IAAjB,aAEF,qBAAKvO,UAAU,WAAf,SACE,eAAC,IAAD,CAAM8B,GAAG,UAAT,UAAmB,cAACqF,EAAA,EAAD,IAAnB,eAEF,qBAAKnH,UAAU,WAAf,SACE,eAAC,IAAD,CAAM8B,GAAG,aAAT,UAAsB,cAAC+K,GAAA,EAAD,IAAtB,kBAEF,qBAAK7M,UAAU,WAAf,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAQO,SAAU,SAACiO,GAAO1F,GAAgB,QAAS0F,IAAKhD,gBAAgB,QAAQE,kBAAkB,OAAOE,gBAAgB,IACzH,cAAC,KAAD,CAAQrL,SAAU,SAACiO,GAAO1F,GAAgB,YAAa0F,IAAKhD,gBAAiB,cAACiD,GAAA,EAAD,IAAuB/C,kBAAmB,cAACgD,GAAA,EAAD,IAAmB9C,gBAAc,iBC1C9J+C,I,OAAa,QCgEJC,GAhDH,WACV,IADgB,EAEoB/O,mBDhBjB,WACnB,IAAMgP,EAAOC,aAAaC,QAAQJ,IAClC,IAAKE,EACH,OAAO,EAET,IAAI1M,EAAI,IAAI6M,KAAK5N,KAAK6N,MAAMJ,GAAMK,MAAMC,UAGxC,SAFkB,IAAIH,MAAOG,UAEXhN,EAAI,MCQuBiN,IAF7B,mBAET1B,EAFS,KAEG2B,EAFH,KAahB,OACE,qBAAKrP,UAAU,MAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6B,KAAK,kBAAZ,SACE,cAAC,EAAD,CAAayB,SAAU,EAAvB,SACE,cAAC,GAAD,QAGJ,cAAC,IAAD,CAAOzB,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,CAAayB,SAAU,EAAvB,SACE,cAAC,GAAD,QAGJ,cAAC,IAAD,CAAOzB,KAAK,IAAZ,SACE,cAAC,EAAD,CAAayB,SAAU,EAAvB,SACE,cAACgM,GAAD,CAAM5B,WAAYA,EAAYF,YAlCpB,SAACD,GAHN,SAIEA,EAAK9O,QDHxBqQ,aAAaS,QAAQZ,GAAYvN,KAAKC,UAAU,CAC9C6N,KAAM,IAAIF,QCIRK,GAAc,IAEdxD,IAAQ2D,MAAM,yDAiCX9B,GAAc,cAAC,GAAD,UC/CR+B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAStO,OACP,cAAC,IAAMuO,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M,gCChBA,gPA8BIa,EA9BJ,QAEMC,EAAOtR,EAAQ,KAEfuR,EAAsB,qBAEtBrD,EAAgB,SAACsD,GACrB3B,aAAaS,QAAQ,aAAckB,IAG/BzD,EAAgB,WACpB,OAAO8B,aAAaC,QAAQ,eAGxBvJ,EAAmB,WAKvB,OAJKwH,KACHG,EAAcqD,GAGV,UAAN,OAAiBxD,MAYb0D,EAAkB,GAElB5N,EAAU,SAAVA,EAAW5B,EAAM2H,GACrB,GAAIyH,EAAOK,aAAeL,EAAOM,WAC/BC,YAAW,WACT/N,EAAQ5B,EAAM2H,KACb,SACE,IAAIyH,EAAOK,aAAeL,EAAOQ,KAQtC,OAPA5P,EAAK6P,MAAQR,EAAKS,KAClBN,EAAgBrI,KAAK,CACnB0I,MAAO7P,EAAK6P,MACZlI,aAEFyH,EAAOW,KAAK7P,KAAKC,UAAUH,MAuBzBkM,EAAkB,WACtB,IAAM8D,GA7CDlE,KACHG,EAAcqD,GAGV,QAAN,OAAexD,OA0CfsD,EAAS,IAAIa,UAAUD,IAChBE,iBAAiB,WAAW,SAACjQ,IApBpB,SAAC6F,GACjB,IAGE,IAHG,IAAD,EACsB5F,KAAK6N,MAAMjI,GAA3B+J,EADN,EACMA,MAAO7P,EADb,EACaA,KAEN+B,EAAI,EAAGA,EAAIyN,EAAgB9R,OAAQqE,IAC1C,GAAIyN,EAAgBzN,GAAG8N,QAAUA,EAAO,CACtCL,EAAgBzN,GAAG4F,SAAS3H,GAC5BwP,EAAgBW,OAAOpO,EAAG,GAC1B,OAGJ,MAAO9B,GAEP,YADAiN,QAAQC,IAAIlN,IASZmQ,CAAUnQ,EAAED,SAEdoP,EAAOc,iBAAiB,SAAS,SAACjQ,GAChC0K,IAAQ2D,MAAM,2BAA4B,IAC1CpB,QAAQC,IAAIlN,MAEdmP,EAAOc,iBAAiB,QAAQ,WAC9BvF,IAAQ0F,QAAQ,0BAElBjB,EAAOc,iBAAiB,SAAS,WAC/BvF,IAAQ2F,KAAK,oCAIjBpE,K,iBC/EAqE,EAAOC,QANW,CAChB1S,iBAAkB,IAElBuF,kBAAmB,oB","file":"static/js/main.754c5f0a.chunk.js","sourcesContent":["\nconst videoExts = [\n  'mp4',\n  'mkv'\n]\n\nconst getExt = (fname) => {\n  let ext = fname.trim().toLowerCase().split(\".\");\n  ext = ext[ext.length - 1];\n\n  return ext;\n}\n\nconst isVideo = (str) => {\n  const ext = getExt(str);\n\n  if (videoExts.includes(ext)) {\n    return true;\n  }\n  return false;\n}\n\n\nexport {\n  isVideo,\n  getExt\n}","import { useState } from 'react';\nimport { Input, Table, Card, Typography } from 'antd';\n\nconst { MOBILE_MAX_WIDTH } = require(\"../../config/constants\");\n\nconst { Search } = Input;\nconst { Title} = Typography;\n\nconst { innerWidth: width } = window;\n\nconst List = (props) => {\n  const cardBodyStyle = width < MOBILE_MAX_WIDTH ? { padding: 0 } : {};\n  const [filter, setFilter] = useState(\"\");\n\n  const onSearch = val => setFilter(val.target.value.trim());\n\n  const getFiltererdData = () => {\n    if (!filter || !filter.length || props.loading) {\n      return props.data;\n    }\n    const ret = props.data.filter(e => {\n      if (JSON.stringify(e).toLowerCase().includes(filter.toLowerCase())) {\n        return true;\n      }\n      return false;\n    });\n\n    return ret;\n  }\n\n  return (\n    <div className=\"listContainer\">\n      <Card className=\"listWrapper\" bordered={width < MOBILE_MAX_WIDTH ? false : true} bodyStyle={cardBodyStyle}>\n        <Title className={width < MOBILE_MAX_WIDTH ? \"listTitle\" : \"\"} level={4} type=\"secondary\">{props.title}</Title>\n        <div className={width < MOBILE_MAX_WIDTH ? \"stickyBox searchBox\" : \"searchBox\"}>\n          <Search className={width < MOBILE_MAX_WIDTH ? \"searchBoxBG\" : \"\"} placeholder=\"Enter text to search\" onChange={onSearch} style={{ width: \"100%\" }} />\n        </div>\n        <div style={{ display: \"block\", position: \"static\" }}>\n          <Table bordered={true} columns={props.columns} pagination={false} loading={props.loading} dataSource={getFiltererdData()} />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default List;","export default __webpack_public_path__ + \"static/media/LogoFull.8b039451.png\";","import LogoFull from \"../assets/LogoFull.png\";\n\nconst Logo = (props) => {\n  return (\n    <div className=\"logoContainer\">\n      <img className={props.size === \"sm\" ? \"logo-sm\" : \"logo\" } alt=\"Xomic\" src={LogoFull} />\n    </div>\n  )\n};\n\nexport default Logo;","import { useState, useEffect } from 'react';\nimport { Tag } from 'antd';\nimport { CheckCircleOutlined, ClockCircleOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom';\n\nimport List from '../components/List';\nimport Logo from '../components/Logo';\nimport { sendMsg } from \"../services/server\";\n\nconst { MOBILE_MAX_WIDTH } = require(\"../config/constants\");\n\nconst { innerWidth: width } = window;\n\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'path',\n    render: path => {\n      return (\n        <Link to={`/tagger/${path}`} style={{textTransform: \"capitalize\"}}>\n        { path }\n        </Link>\n      )\n    }\n  },\n  {\n    title: (<CheckCircleOutlined />),\n    dataIndex: 'categorized',\n    sorter: {\n      compare: (a, b) => a.categorized - b.categorized,\n      multiple: 1\n    },\n    render: categorized => {\n      return (\n        <Tag color=\"green\" key={categorized}>\n          {categorized}\n        </Tag>\n      )\n    }\n  },\n  {\n    title: (<ClockCircleOutlined />),\n    dataIndex: 'uncategorized',\n    sorter: {\n      compare: (a, b) => a.uncategorized - b.uncategorized,\n      multiple: 2\n    },\n    render: uncategorized => {\n      return (\n        <Tag color=\"gold\" key={uncategorized}>\n          {uncategorized}\n        </Tag>\n      )\n    }\n  }\n];\n\n\nconst TaggerList = (props) => {\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    sendMsg({ dataRequest: \"taggerList\" }, (d) => {\n      for (let i = 0; i < d.length; i++) {\n        d[i].key = d[i].path\n      }\n      setData(d);\n      setLoading(false);\n    });\n  }, [])\n\n  return (\n    <div className=\"listView\" style={{ paddingTop: width > MOBILE_MAX_WIDTH ? \"15vh\" : \"10vh\" }}>\n      <Logo />\n      <List loading={loading} columns={columns} data={data} title=\"Tagger\" />\n    </div>\n  )\n}\n\nexport default TaggerList","import Logo from '../components/Logo';\n\nconst { MOBILE_MAX_WIDTH } = require(\"../config/constants\");\n\nconst { innerWidth: width } = window;\n\nconst BaseWrapper = (props) => {\n  const topPadding = props.logoSize * 5 || 5;\n\n  return (\n    <div className=\"listView\" style={{ paddingTop: width > MOBILE_MAX_WIDTH ? `${topPadding}vh` : `${topPadding / 1.5}vh` }}>\n      <Logo size={topPadding > 5 ? \"lg\" : \"sm\"}/>\n      {props.children}\n    </div>\n  )\n}\n\nexport default BaseWrapper;","import { useState, useEffect } from 'react';\nimport { Tag } from 'antd';\nimport { StarOutlined } from '@ant-design/icons'\nimport { Link, useLocation } from 'react-router-dom';\n\nimport List from '../components/List';\nimport Logo from '../components/Logo';\nimport { sendMsg } from \"../services/server\";\n\nconst { MOBILE_MAX_WIDTH } = require(\"../config/constants\");\n\nconst { innerWidth: width } = window;\n\nconst baseRoute = \"/story-list\";\nconst storyRoute = \"/story\";\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'path',\n    render: (path, row) => {\n      let href = `${window.location.pathname}${path}/`;\n\n      if (row.type === \"story\") {\n        const subPath = decodeURI(window.location.pathname).replace(baseRoute, \"\");\n        href = `${subPath}${path}`;\n        // console.log(href);\n        href = btoa(href);\n        href = `${storyRoute}/${href}`\n      }\n\n      return (\n        <Link to={href} style={{textTransform: \"capitalize\"}}>\n        { path }\n        </Link>\n      )\n    }\n  },\n  {\n    title: (<StarOutlined />),\n    dataIndex: 'content',\n    sorter: {\n      compare: (a, b) => (a.content - b.content),\n      multiple: 1\n    },\n    render: (content, row) => {\n      if (content === null) {\n        return ({});\n      }\n      return (\n        <Tag color={row.type === \"story\" ? \"gold\" : \"green\"} key={content}>\n          {content}\n        </Tag>\n      )\n    }\n  }\n];\n\n\nconst StoryList = (props) => {\n  const location = useLocation();\n\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    const subPath = location.pathname.replace(baseRoute, \"\");\n\n    sendMsg({ dataRequest: \"listDir\", \"subPath\": subPath }, (d) => {\n      const subPathShort = window.location.pathname.replace(baseRoute, \"\")\n      if (subPathShort && subPathShort !== \"/\") {\n        d.unshift({\n          path: \"..\",\n          content: null,\n          type: null\n        })\n      }\n      for (let i = 0; i < d.length; i++) {\n        d[i].key = d[i].path;\n      }\n      setData(d);\n      setLoading(false);\n    });\n  }, [location])\n\n  return (\n    <div className=\"listView\" style={{ paddingTop: width > MOBILE_MAX_WIDTH ? \"15vh\" : \"10vh\" }}>\n      <Logo />\n      <List loading={loading} columns={columns} data={data} title=\"Story List\" />\n    </div>\n  )\n}\n\nexport default StoryList;","import { useParams } from \"react-router-dom\";\nimport { Tag, Button, Space, Input, Typography, Spin } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  LeftOutlined,\n  RightOutlined,\n  DoubleLeftOutlined,\n  DoubleRightOutlined,\n  TagOutlined\n} from '@ant-design/icons'\nimport { useState, useEffect, useRef } from 'react';\n\nimport \"./style.css\";\nimport { sendMsg, getServerAddress } from \"../../services/server\";\n\nconst { SERVER_ASSET_PATH } = require(\"../../config/constants\");\nconst { Text } = Typography;\nconst { getExt, isVideo } = require(\"../../utils/utils\");\n\nconst Tagger = (props) => {\n  const catName = useParams().tagCat;\n  const imageId = uuidv4().split(\"-\")[0];\n  const catList = useRef([]);\n\n  const [loading, setLoading] = useState(true);\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    sendMsg({ dataRequest: \"taggerImageList\", path: catName }, (d) => {\n      catList.current = d;\n      catList.current = catList.current.map(image => { return { image, categorized: false, isVideo: isVideo(image) } });\n      setLoading(false);\n    });\n  }, [])\n\n  const getImagePath = () => {\n    if (index >= catList.current.length) {\n      return \"null\"\n    }\n    let img = `${getServerAddress()}${SERVER_ASSET_PATH}/${catName}/`;\n    img += catList.current[index].categorized ? \"categorized\" : \"uncategorized\";\n    img += `/${catList.current[index].image}`;\n    return img;\n  }\n\n  const increaseIndex = (i) => {\n    setIndex(Math.min(index + i, catList.current.length - 1));\n  }\n\n  const decreaseIndex = (i) => {\n    setIndex(Math.max(index - i, 0));\n  }\n\n  const onInputEnter = (ev) => {\n    const ext = getExt(catList.current[index].image);\n    const tags = ev.target.value.trim().toLowerCase() || \"t\";\n\n    const newFileName = `${tags}_${imageId}.${ext}`;\n    const msg = {\n      dataRequest: \"taggerTagImage\",\n      path: catName,\n      fileName: catList.current[index].image,\n      categorized: catList.current[index].categorized,\n      newFileName: newFileName\n    }\n    sendMsg(msg, () => {\n      catList.current[index].image = newFileName;\n      catList.current[index].categorized = true;\n      if (index === catList.current.length - 1) {\n        decreaseIndex(1);\n      } else {\n        increaseIndex(1);\n      }\n      ev.target.value = '';\n    });\n    ev.target.value = '';\n  }\n\n  return (\n    <div>\n      <div className=\"taggerWrapper\">\n        <div className=\"taggerTitle\">\n          {`${index + 1}/${catList.current.length}`}\n          <br />\n          <Text type={catList.current[index] && catList.current[index].categorized ? 'success' : 'warning'}>\n            {catList.current[index] ? catList.current[index].image : ' '}\n          </Text>\n        </div>\n        <div className=\"taggerViewContainer\">\n          <div className=\"taggerControls\">\n            <Space direction=\"vertical\">\n              <Button disabled={index === 0} onClick={() => decreaseIndex(1)} type=\"primary\" shape=\"circle\" icon={<LeftOutlined />} />\n              <Button disabled={index === 0} onClick={() => decreaseIndex(5)} type=\"primary\" shape=\"circle\" icon={<DoubleLeftOutlined />} />\n            </Space>\n          </div>\n          <div className=\"taggerImageContainer\">\n            {loading && <Spin size=\"large\" />}\n            {!loading && catList.current[index] && !catList.current[index].isVideo  &&\n              <img className=\"taggerImage\" alt=\"img\" src={getImagePath()} />}\n            {\n              !loading && catList.current[index] && catList.current[index].isVideo &&\n              <video className=\"taggerImage\" src={getImagePath()} controls autoPlay muted loop>\n              </video>\n            }\n          </div>\n          <div className=\"taggerControls\">\n            <Space direction=\"vertical\">\n              <Button disabled={index === catList.current.length - 1} onClick={() => increaseIndex(1)} type=\"primary\" shape=\"circle\" icon={<RightOutlined />} />\n              <Button disabled={index === catList.current.length - 1} onClick={() => increaseIndex(10)} type=\"primary\" shape=\"circle\" icon={<DoubleRightOutlined />} />\n            </Space>\n          </div>\n        </div>\n        <div className=\"taggerTagsContainer\">\n          <Tag color=\"magenta\">a</Tag>\n          <Tag color=\"magenta\">b</Tag>\n          <Tag color=\"magenta\">d</Tag>\n          <Tag color=\"magenta\">l</Tag>\n          <Tag color=\"magenta\">t</Tag>\n          <Tag color=\"volcano\">ea</Tag>\n          <Tag color=\"volcano\">ef</Tag>\n          <Tag color=\"volcano\">es</Tag>\n        </div>\n        <div className=\"taggerInputContainer\">\n          <Input id=\"sdsd\" onPressEnter={onInputEnter} prefix={(<TagOutlined />)} suffix={imageId} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Tagger","import { useState, useRef, useEffect } from \"react\";\nimport { Button, Table, Tag, Typography, Input, Switch, Space } from 'antd';\n\nconst { Text } = Typography;\n\n\nconst Replacer = (props) => {\n  const replacedTable = useRef([]);\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    replacedTable.current = props.characters.map((o) => { return { name: o.name, replacement: \"\" } });\n    setData(props.characters.map((o, ind) => { o.key = ind; return o }))\n  }, [props.characters])\n\n  const onReplaceEnter = (rep, index) => {\n    replacedTable.current[index].replacement = rep;\n  }\n\n  const onReplaceNameEnter = (name, index) => {\n    replacedTable.current[index].name = name;\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (name, row) => {\n        if (row.editable) {\n          return (\n            <div>\n              <Input onChange={(e) => { onReplaceNameEnter(e.target.value, row.key) }} placeholder=\"Enter what to replace\" />\n            </div>\n          )\n        }\n        return (\n          <div>\n            <Text className=\"titleCase \" style={{ fontWeight: \"bold\" }}>{name} </Text>\n            {<Tag color={row.firstName ? \"default\" : \"geekblue\"}>{row.firstName ? \"FirstName\" : \"LastName\"}</Tag>}\n            {row.gender && <Tag className=\"titleCase\" color={row.gender == \"male\" ? \"cyan\" : \"pink\"}>{row.gender}</Tag>}\n            {row.occurences && <Tag color=\"orange\">{row.occurences}</Tag>}\n          </div>\n        )\n      }\n    },\n    {\n      title: 'Replace',\n      dataIndex: 'occurences',\n      key: 'occurences',\n      render: (name, row) => {\n        return (\n          <div>\n            <Input onChange={(e) => { onReplaceEnter(e.target.value, row.key) }} placeholder=\"Enter to replace\" />\n          </div>\n        )\n      }\n    }\n  ];\n\n  const addReplacer = () => {\n    replacedTable.current.push({ name: \"\", replacement: \"\" });\n    setData([...data, { name: \"\", editable: true, key: data.length }]);\n  }\n\n  const onReplace = () => {\n    const replaced = {};\n\n    for (let rep of replacedTable.current) {\n      if (rep.replacement && rep.replacement.length) {\n        replaced[rep.name] = rep.replacement\n      }\n    }\n\n    props.onReplace(replaced);\n  }\n\n  return (\n    <div className=\"replacerWrapper font-primary\">\n      <Text>Replacer </Text><Switch onChange={setShow} />\n      <br />\n      <br />\n      { show &&\n        <div>\n          <Table bordered={true} pagination={false} dataSource={data} columns={columns} />\n          <br />\n          <Space direction=\"vertical\">\n            <Button shape=\"circle\" type=\"dashed\" onClick={addReplacer} >+</Button>\n            <Space>\n              <Button shape=\"round\" type=\"primary\" danger onClick={onReplace} >Replace</Button>\n              <Button shape=\"round\" type=\"primary\" onClick={props.onSave}>Save</Button>\n            </Space>\n          </Space>\n        </div>}\n    </div >)\n}\n\nexport default Replacer;","const events = {};\n\nconst addGlobalEventListener = (eventType, callback) => {\n  if (events[eventType]) {\n    events[eventType].push(callback);\n  }\n  events[eventType] = [callback];\n}\n\nconst emitGlobalEvent = (eventType, state) => {\n  if (!events[eventType]) {\n    return;\n  }\n  for (let subscriber of events[eventType]) {\n    subscriber(state);\n  }\n}\n\nexport {\n  addGlobalEventListener,\n  emitGlobalEvent\n}\n","const { getServerAddress } = require(\"../services/server\");\n\nconst { SERVER_ASSET_PATH } = require(\"../config/constants\");\n\nconst highLighWords = {\n  \"boob\": \"#ff7875\",\n  \"gaand\": \"#ffa940\",\n  \"gand\": \"#ffa940\",\n  \"chutad\": \"#9254de\",\n  \"asshole\": \"#9254de\",\n  \"butthole\": \"#9254de\",\n  \"anal\": \"#73d13d\",\n  \"anus\": \"#73d13d\",\n  \"ass\": \"#ff4d4f\",\n  \"butt\": \"#597ef7\",\n  \"buttplug\": \"#36cfc9\",\n  \"गांड\": \"#ffa940\",\n  \"चूतड़\": \"#597ef7\",\n  \"doggy\": \"#ff7a45\",\n  \"ghodi\": \"#ff7a45\",\n  \"spank\": \"#36cfc9\",\n}\n\nconst getHighlightWordClass = (word) => {\n  let result = \"a\";\n  for (let i = 0; i < word.length; i++) {\n    result += word.charCodeAt(i).toString(16);\n  }\n  result += \"z\";\n  return result;\n}\n\nconst getHighLightStyle = () => {\n  let style = \"<style>\";\n  for (let hw in highLighWords) {\n    style += `.${getHighlightWordClass(hw)}{color:${highLighWords[hw]}}`;\n  }\n  style += \"</style>\";\n  return style;\n}\n\nconst applyHighlightTags = (html) => {\n  for (let hw in highLighWords) {\n    html = html.replace(new RegExp(`\\\\W${hw}\\\\W`, \"gi\"), `<span class=\"${getHighlightWordClass(hw)}\"> ${hw} </span>`);\n  }\n\n  return html;\n}\n\nconst getParagraphsHTML = (paragraphs) => {\n  const res = [];\n\n  for (let paragraph of paragraphs) {\n    // eslint-disable-next-line\n    paragraph = paragraph.replace(new RegExp(\"\\n\", \"g\"), \"<br />\");\n    paragraph = applyHighlightTags(paragraph);\n    res.push(paragraph);\n  }\n\n  return res;\n}\n\nconst getStoryTitleScore = (storyURL) => {\n  let url = storyURL.split(\".\");\n  url = url[url.length - 2].split(\"/\");\n  url = url[url.length - 1];\n  url = url.split(\"_\")\n  return { title: url[0], score: url[url.length - 1] };\n}\n\nconst getParagraphImageURL = (paraIndex, photos) => {\n  // console.log(photos)\n  const filtered = photos.filter((photo) => (photo.paragraph === paraIndex));\n\n  if (!filtered.length) {\n    return null\n  }\n\n  return `${getServerAddress()}${SERVER_ASSET_PATH}/${filtered[0].actress}/categorized/${filtered[0].photo}`;\n}\n\nconst performReplacementInter = (paragraph, replacements) => {\n  let newPara = paragraph;\n\n  for (let replacement in replacements) {\n    newPara = newPara.replace(new RegExp(replacement, \"gi\"), replacements[replacement]);\n  }\n\n  return newPara;\n}\n\nconst performReplacement = (paragraphs, replacements) => {\n  if (typeof(paragraphs) == \"string\") {\n    return performReplacementInter(paragraphs, replacements);\n  }\n\n  const res = [];\n\n  for (let paragraph of paragraphs) {\n    res.push(performReplacementInter(paragraph, replacements));\n  }\n\n  return res;\n}\n\nexport {\n  getParagraphsHTML,\n  getStoryTitleScore,\n  getHighLightStyle,\n  getParagraphImageURL,\n  performReplacement\n}\n\n// export default storyUtils;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from 'react';\nimport { Tag, Button, Space, Switch, message, Spin } from 'antd';\nimport {\n  EyeInvisibleOutlined,\n  EyeOutlined,\n  ReloadOutlined\n} from '@ant-design/icons';\n\nimport Logo from '../Logo';\nimport Replacer from \"./Replacer\";\nimport \"./style.css\";\n\nimport { addGlobalEventListener } from \"../../services/globalState\";\nimport { sendMsg } from \"../../services/server\";\nimport {\n  getParagraphsHTML,\n  getStoryTitleScore,\n  getHighLightStyle,\n  getParagraphImageURL,\n  performReplacement\n} from \"../../utils/story\";\n\nconst { isVideo } = require(\"../../utils/utils\");\n\nconst Story = (props) => {\n  const storyURL = atob(useParams().storyURL);\n\n  const [loading, setLoading] = useState(true);\n  const [theme, setTheme] = useState(false);\n  const [highlight, setHighlight] = useState(true);\n  const [showImages, setShowImages] = useState(false);\n\n  const [paragraphs, setParagraphs] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  const [title, setTitle] = useState(\"\");\n\n  const [characters, setCharacters] = useState([]);\n  const origParagraphs = useRef([]);\n\n  useEffect(() => {\n    sendMsg({ dataRequest: \"getStory\", storyURL }, (d) => {\n      origParagraphs.current = getParagraphsHTML(d.paragraphs);\n\n      setCharacters(d.characters);\n      setTitle(getStoryTitleScore(storyURL).title);\n      setParagraphs(origParagraphs.current);\n      setPhotos(d.photos);\n      setLoading(false);\n    });\n\n    addGlobalEventListener(\"theme\", (t) => { setTheme(t) });\n    addGlobalEventListener(\"highlight\", (hl) => { setHighlight(hl) });\n  }, [])\n\n  const replace = (replaceTable) => {\n    setParagraphs(performReplacement(origParagraphs.current, replaceTable));\n    setTitle(performReplacement(title, replaceTable));\n    message.info(\"Replaced!\");\n  }\n\n  const refreshStory = () => {\n    sendMsg({ dataRequest: \"suggestPhotos\", paragraphs }, (d) => {\n      setPhotos(d.photos);\n      message.info(\"Refreshed Photos!\");\n    })\n  }\n\n  const saveStory = () => {\n    sendMsg({ dataRequest: \"saveStory\", paragraphs, title }, (d) => {\n      message.info(\"Story Saved!\")\n    });\n  }\n\n  return (\n    <div className={\"baseContainer \" + (theme ? \"baseContainerLight\" : \"baseContainerDark\")}>\n      {/* <BackTop /> */}\n      <Logo />\n      <div className={\"storyBaseWrapper \" + (theme ? \"storyBaseWrapperLight\" : \"storyBaseWrapperDark\")}>\n        {loading && <div className=\"loadingContainer\">\n          <Spin size=\"large\" />\n          </div>}\n        <div className={loading ? \"displayNone\" : \"\"}>\n          <div className=\"storyTitle\"> {title} </div>\n          <Space direction=\"vertical\">\n            <Tag color=\"cyan\">{getStoryTitleScore(storyURL).score}</Tag>\n            <Space>\n              <Switch onChange={setShowImages} checkedChildren={<EyeOutlined />} unCheckedChildren={<EyeInvisibleOutlined />} defaultChecked={false} />\n              <Button type=\"link\" onClick={refreshStory} shape=\"circle\" icon={<ReloadOutlined />} />\n            </Space>\n          </Space>\n          <div className=\"storyContainer\">\n            <div dangerouslySetInnerHTML={{ __html: highlight ? getHighLightStyle() : \"\" }}></div>\n            {paragraphs.map((para, index) => {\n              const photoSrc = getParagraphImageURL(index, photos);\n              return (\n                <div className=\"paragraphContainer\" key={index}>\n                  <div className=\"paragraph\" dangerouslySetInnerHTML={{ __html: para }}></div>\n                  {showImages && photoSrc && !isVideo(photoSrc) && <img loading=\"lazy\" className=\"storyImage\" alt=\"Cannot Load\" src={photoSrc}></img>}\n                  {showImages && photoSrc && isVideo(photoSrc) && <video preload=\"metadata\" className=\"storyImage\" alt=\"Cannot Load\" src={photoSrc} muted controls autoPlay loop></video>}\n                </div>);\n            })}\n          </div>\n          <div className=\"cCharactersContainer\">\n            <Replacer onReplace={replace} onSave={saveStory} characters={characters} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Story;\n","import { Card, Typography, Input, Button, Space } from 'antd';\nimport { useRef } from 'react';\nimport { SettingOutlined } from '@ant-design/icons';\n\nimport './style.css';\n\nimport { connectToServer, setServerHost, getServerHost } from \"../../services/server\";\nconst { Text } = Typography;\n\n\nconst Configure = (props) => {\n  const inputRef = useRef();\n\n  const saveServer = () => {\n    setServerHost(inputRef.current.state.value);\n    connectToServer();\n  }\n\n\n  return (\n    <div className=\"configureCard\">\n      <Card title={(<><SettingOutlined />{\" Configure\"}</>)}>\n        <div style={{ textAlign: \"left\" }}>\n          <Text type=\"secondary\">Server Host</Text>\n          <br />\n          <Input defaultValue={getServerHost()} ref={inputRef} addonAfter={<SettingOutlined />} placeholder=\"Enter Server Address\" />\n          <br />\n          <br />\n          <Space>\n            <Button onClick={saveServer} type=\"primary\">Save</Button>\n            <Button onClick={connectToServer} >Reconnect</Button>\n          </Space>\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default Configure;\n\n","import { Card, Typography, Input, Button, Space } from 'antd';\nimport { useRef } from 'react';\nimport { SettingOutlined, LockOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\n\nconst { Text } = Typography;\n\nconst Host = (props) => {\n\n  const inputRef = useRef();\n\n  const onPassEnter = () => {\n    const pass = inputRef.current.state.value;\n    props.onAuthorize(pass);\n  }\n\n  return (\n    <div className=\"configureCard\">\n      <Card style={{ minHeight: \"350px\" }} title={(<>{\"Welcome to Xomic\"}</>)}>\n        {!props.authorized && <div >\n          <Text type=\"secondary\"> Access Key</Text>\n          <Input inputMode=\"numeric\" onPressEnter={onPassEnter} ref={inputRef} type=\"password\" addonAfter={<LockOutlined />} placeholder=\"Enter Access Key\" />\n          <br />\n          <br />\n          <Button onClick={onPassEnter} type=\"primary\" danger>Authorize</Button>\n        </div>}\n        {props.authorized && <div>\n          <br />\n          <Space>\n            <Link to=\"/story-list/\">\n              <Button size=\"large\" type=\"primary\" shape=\"circle\" icon={<UnorderedListOutlined />} />\n            </Link>\n            <Link to=\"/configure/\">\n              <Button size=\"large\" type=\"primary\" danger shape=\"circle\" icon={<SettingOutlined />} />\n            </Link>\n          </Space>\n        </div>}\n      </Card>\n    </div>\n  )\n}\n\nexport default Host;","import { Switch, Space } from 'antd';\nimport {\n  HighlightOutlined,\n  CloseOutlined,\n  UpOutlined,\n  HomeOutlined,\n  TagOutlined,\n  SettingOutlined\n} from '@ant-design/icons';\nimport { useState, useRef } from 'react'\nimport { Link } from 'react-router-dom';\nimport \"./style.css\";\n\nimport { emitGlobalEvent } from '../../services/globalState';\n\n\nconst Menu = (props) => {\n  const [isOpened, setOpened] = useState(false);\n  const inputEl = useRef(null);\n\n  const toggleNavState = () => {\n    setOpened(!isOpened)\n    console.log(inputEl.current.scrollHeight)\n  }\n\n  return (\n    <div ref={inputEl} id=\"menuContainer\" className=\"menuContainer\" style={isOpened ? { top: `calc(100vh - ${inputEl.current.scrollHeight}px)` } : { top: \"100vh\" }}>\n      <div className=\"toggleButtonContainer\">\n        <button onClick={toggleNavState} className=\"toggleButton\"><UpOutlined /></button>\n      </div>\n      <div className=\"menuItemsContainer\">\n        <div className=\"menuItem\">\n          <Link to=\"/home\"><HomeOutlined /> Home</Link>\n        </div>\n        <div className=\"menuItem\">\n          <Link to=\"/tagger\"><TagOutlined /> Tagger</Link>\n        </div>\n        <div className=\"menuItem\">\n          <Link to=\"/configure\"><SettingOutlined /> Configure</Link>\n        </div>\n        <div className=\"menuItem\">\n          <Space>\n            <Switch onChange={(c) => {emitGlobalEvent(\"theme\", c)}} checkedChildren=\"Light\" unCheckedChildren=\"Dark\" defaultChecked={false} />\n            <Switch onChange={(c) => {emitGlobalEvent(\"highlight\", c)}} checkedChildren={<HighlightOutlined />} unCheckedChildren={<CloseOutlined />} defaultChecked />\n          </Space>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Menu;","\nconst LS_AUTH_ID = \"auth\";\n\nconst isAuthorized = () => {\n  const auth = localStorage.getItem(LS_AUTH_ID);\n  if (!auth) {\n    return false;\n  }\n  let a = new Date(JSON.parse(auth).time).getTime();\n  let currentTime = new Date().getTime();\n\n  if (currentTime - a > 1000 * 3600 * 2) {\n    return false;\n  }\n\n  return true;\n}\n\nconst authorize = () => {\n  localStorage.setItem(LS_AUTH_ID, JSON.stringify({\n    time: new Date()\n  }))\n}\n\nexport {\n  authorize,\n  isAuthorized\n}","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useState } from 'react';\nimport { message } from 'antd';\nimport TaggerList from './views/TaggerList';\nimport BaseWrapper from './views/BaseWrapper';\nimport StoryList from './views/StoryList';\n\nimport Tagger from './components/Tagger';\nimport Story from \"./components/Story\";\nimport Configure from './components/Configure';\nimport Home from './components/Home';\n\nimport Menu from \"./components/Menu\";\nimport './App.less';\n\nimport { authorize, isAuthorized } from \"./services/auth\";\n\nconst App = () => {\n  const passcode = \"2718\";\n  const [authorized, setAuthorized] = useState(isAuthorized());\n\n  const authorizeUser = (pass) => {\n    if (passcode === pass.trim()) {\n      authorize();\n      setAuthorized(true);\n    } else {\n      message.error(\"Either wrong Password or time limit expired\")\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/tagger/:tagCat\">\n            <BaseWrapper logoSize={0}>\n              <Tagger />\n            </BaseWrapper>\n          </Route>\n          <Route path=\"/tagger\">\n            <TaggerList />\n          </Route>\n          <Route path=\"/story-list/*\">\n            <StoryList />\n          </Route>\n          <Route path=\"/story/:storyURL\">\n            <Story />\n          </Route>\n          <Route path=\"/configure\">\n            <BaseWrapper logoSize={2}>\n              <Configure />\n            </BaseWrapper>\n          </Route>\n          <Route path=\"/\">\n            <BaseWrapper logoSize={2}>\n              <Home authorized={authorized} onAuthorize={authorizeUser} />\n            </BaseWrapper>\n          </Route>\n        </Switch>\n        {authorized && <Menu />}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { message } from 'antd';\n\nconst uuid = require('uuid');\n\nconst DEFAULT_SERVER_HOST = \"192.168.0.111:5005\";\n\nconst setServerHost = (address) => {\n  localStorage.setItem(\"serverHost\", address);\n}\n\nconst getServerHost = () => {\n  return localStorage.getItem(\"serverHost\");\n}\n\nconst getServerAddress = () => {\n  if (!getServerHost()) {\n    setServerHost(DEFAULT_SERVER_HOST)\n  }\n\n  return `http://${getServerHost()}`;\n}\n\nconst getSocketAddress = () => {\n  if (!getServerHost()) {\n    setServerHost(DEFAULT_SERVER_HOST)\n  }\n\n  return `ws://${getServerHost()}`;\n}\n\nlet socket;\nconst pendingRequests = [];\n\nconst sendMsg = (data, callback) => {\n  if (socket.readyState === socket.CONNECTING) {\n    setTimeout(() => {\n      sendMsg(data, callback);\n    }, 200);\n  } else if (socket.readyState === socket.OPEN) {\n    data.msgId = uuid.v4();\n    pendingRequests.push({\n      msgId: data.msgId,\n      callback\n    });\n    socket.send(JSON.stringify(data));\n  } else {\n    return\n  }\n}\n\nconst handleMsg = (msg) => {\n  try {\n    const { msgId, data } = JSON.parse(msg);\n\n    for (let i = 0; i < pendingRequests.length; i++) {\n      if (pendingRequests[i].msgId === msgId) {\n        pendingRequests[i].callback(data);\n        pendingRequests.splice(i, 1);\n        break;\n      }\n    }\n  } catch (e) {\n    console.log(e)\n    return\n  }\n}\n\nconst connectToServer = () => {\n  const socketAddress = getSocketAddress();\n  socket = new WebSocket(socketAddress);\n  socket.addEventListener(\"message\", (e) => {\n    handleMsg(e.data);\n  });\n  socket.addEventListener(\"error\", (e) => {\n    message.error(\"Cannot connect to server\", 15)\n    console.log(e)\n  })\n  socket.addEventListener(\"open\", () => {\n    message.success(\"Connected to server\")\n  })\n  socket.addEventListener(\"close\", () => {\n    message.warn(\"Connection to server closed!\");\n  })\n}\n\nconnectToServer();\n\nexport {\n  sendMsg,\n  getServerAddress,\n  getServerHost,\n  setServerHost,\n  connectToServer\n}\n\n// export default server;","const constants = {\n  MOBILE_MAX_WIDTH: 700,\n\n  SERVER_ASSET_PATH: \"/assets/images\"\n}\n\nmodule.exports = constants;"],"sourceRoot":""}